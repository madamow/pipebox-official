<module>
    <det-swarp-wgt>
        wrappername = genwrap.py
        modnamepat = ${modnamepat_tile_generic}
        band=${det_bands}
        <exec_1>
            execname = swarp
            cmd_hyphen = allsingle
            used = file.band_sci, file.band_wgt, file.swarp_config
            was_generated_by = file.det_sci, file.det_wgt
            ancestry = file.band_sci:file.det_sci,file.band_wgt:file.det_wgt
            <cmdline>
                _01_sci = ${file.band_sci.fullname}
                c = ${file.swarp_config.fullname}
                WEIGHTOUT_NAME = ${file.det_wgt.fullname}
                CENTER = ${ra_cent},${dec_cent}
                RESAMPLE = Y
                RESAMPLING_TYPE = NEAREST
                COPY_KEYWORDS = BUNIT,TILENAME,TILEID
                PIXEL_SCALE = ${pixelscale}
                IMAGE_SIZE = ${naxis1},${naxis2}
                IMAGEOUT_NAME = ${file.det_sci.fullname}
                COMBINE_TYPE = AVERAGE
                WEIGHT_IMAGE = ${file.band_wgt.fullname}
                NTHREADS = ${nthreads}
                BLANK_BADPIXELS = Y
            </cmdline>
        </exec_1>
        <file>
            ##### input files
            <swarp_config>
                # what the input files are named
                filename = ${swarp_config_file}

                # where the input files go in jobroot
                dirpat = mepoch
                rundir = config
            </swarp_config>
            <band_sci>
                # how to input file is named
                filepat = tile_band
                flabel = sci
                fsuffix = fits

                # where it lives in jobroot
                dirpat = mepoch
                rundir = coadd
            </band_sci>
            <band_wgt>
                # how to input file is named
                filepat = tile_band
                flabel = wgt
                fsuffix = fits

                # where it lives in jobroot
                dirpat = mepoch
                rundir = coadd
            </band_wgt>

            ##### output files
            <det_sci>
                # what metadata to save
                filetype = coadd_det_sci

                # how to name output file
                filepat = tile_det
                flabel = sci
                fsuffix = fits

                # whether to save or compress
                savefiles = false
                compress_files = false

                # where to put it (jobroot=rundir, archive=ops_enddir)
                dirpat = mepoch
                rundir = coadd
                ops_enddir = coadd
            </det_sci>
            <det_wgt>
                # what metadata to save
                filetype = coadd_det_wgt

                # how to name output file
                filepat = tile_det
                flabel = wgt
                fsuffix = fits

                # whether to save or compress
                savefiles = false
                compress_files = false

                # where to put it (jobroot=rundir, archive=ops_enddir)
                dirpat = mepoch
                rundir = coadd
                ops_enddir = coadd
            </det_wgt>
        </file>
    </det-swarp-wgt>
</module>
